{"version":3,"sources":["webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./src/@primer/gatsby-theme-doctocat/components/layout.js","webpack:///./content/Dropdown.md"],"names":["listStyle","TableOfContents","items","depth","as","m","p","map","item","key","url","pl","display","py","href","color","title","defaultProps","zIndex","alignItems","alignSelf","gridArea","overflow","Layout","children","pageContext","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","mb","open","icon","ChevronDown","ChevronRight","mr","pt","editUrl","contributors","concat","login","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---content-dropdown-md-4883e7805fcbc1331cc1.js","sourcesContent":["import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","import {BorderBox, Box, Flex, Grid, Heading, Position, Text, Details, StyledOcticon} from '@primer/components'\nimport {ChevronDown, ChevronRight} from '@primer/octicons-react'\nimport React from 'react'\nimport Head from '@primer/gatsby-theme-doctocat/src/components/head'\nimport Header, {HEADER_HEIGHT} from '@primer/gatsby-theme-doctocat/src/components/header'\nimport PageFooter from '@primer/gatsby-theme-doctocat/src/components/page-footer'\nimport Sidebar from '@primer/gatsby-theme-doctocat/src/components/sidebar'\nimport SourceLink from '@primer/gatsby-theme-doctocat/src/components/source-link'\nimport StatusLabel from '@primer/gatsby-theme-doctocat/src/components/status-label'\nimport TableOfContents from '@primer/gatsby-theme-doctocat/src/components/table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {title, description, status, source, additionalContributors = []} = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Grid\n          id=\"skip-nav\"\n          maxWidth=\"100%\"\n          gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n          gridTemplateAreas={['\"heading\" \"content\"', null, '\"heading .\" \"content table-of-contents\"']}\n          gridColumnGap={[null, null, 6, 7]}\n          gridRowGap={3}\n          mx=\"auto\"\n          p={[5, 6, null, 7]}\n          css={{alignItems: 'start', alignSelf: 'start'}}\n        >\n          <BorderBox css={{gridArea: 'heading'}} borderWidth={0} borderBottomWidth={1} borderRadius={0} pb={2}>\n            <Heading>{title}</Heading>\n          </BorderBox>\n          {pageContext.tableOfContents.items ? (\n            <Position\n              display={['none', null, 'block']}\n              css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n              position=\"sticky\"\n              top={HEADER_HEIGHT + 24}\n              maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n            >\n              <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                Table of contents\n              </Text>\n              <TableOfContents items={pageContext.tableOfContents.items} />\n            </Position>\n          ) : null}\n          <Box css={{gridArea: 'content'}}>\n            {status || source ? (\n              <Flex mb={3} alignItems=\"center\">\n                {status ? <StatusLabel status={status} /> : null}\n                <Box mx=\"auto\" />\n                {source ? <SourceLink href={source} /> : null}\n              </Flex>\n            ) : null}\n            {pageContext.tableOfContents.items ? (\n              <Box display={['block', null, 'none']} mb={3}>\n                <Details>\n                  {({open}) => (\n                    <>\n                      <Text as=\"summary\" fontWeight=\"bold\">\n                        <StyledOcticon icon={open ? ChevronDown : ChevronRight} mr={2} />\n                        Table of contents\n                      </Text>\n                      <Box pt={1}>\n                        <TableOfContents items={pageContext.tableOfContents.items} />\n                      </Box>\n                    </>\n                  )}\n                </Details>\n              </Box>\n            ) : null}\n            {children}\n            <PageFooter\n              editUrl={pageContext.editUrl}\n              contributors={pageContext.contributors.concat(additionalContributors.map(login => ({login})))}\n            />\n          </Box>\n        </Grid>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/components/components/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Dropdown component is a lightweight context menu for housing navigation and actions.`}</p>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`Dropdown.Button`}</inlineCode>{` as the trigger for the dropdown, or use a custom `}<inlineCode parentName=\"p\">{`summary`}</inlineCode>{` element if you would like. `}<strong parentName=\"p\">{`You must use a `}<inlineCode parentName=\"strong\">{`summary`}</inlineCode>{` tag in order for the dropdown to behave properly!`}</strong>{`. You should also add `}<inlineCode parentName=\"p\">{`aria-haspopup=\"true\"`}</inlineCode>{` to custom dropdown triggers for accessibility purposes. You can use the `}<inlineCode parentName=\"p\">{`Dropdown.Caret`}</inlineCode>{` component to add a caret to a custom dropdown trigger.`}</p>\n    <p>{`Dropdown.Menu wraps your menu content. Be sure to pass a `}<inlineCode parentName=\"p\">{`direction`}</inlineCode>{` prop to this component to position the menu in relation to the Dropdown.Button.`}</p>\n    <h2>{`Default example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Dropdown direction='w'>\n  <Dropdown.Button>Dropdown</Dropdown.Button>\n  <Dropdown.Menu direction='sw'>\n    <Dropdown.Item>Item 1</Dropdown.Item>\n    <Dropdown.Item>Item 2</Dropdown.Item>\n    <Dropdown.Item>Item 3</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n`}</code></pre>\n    <h2>{`With custom button`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Dropdown>\n  <summary>\n    Dropdown\n    <Dropdown.Caret/>\n  </summary>\n  <Dropdown.Menu direction='sw'>\n    <Dropdown.Item>Item 1</Dropdown.Item>\n    <Dropdown.Item>Item 2</Dropdown.Item>\n    <Dropdown.Item>Item 3</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n`}</code></pre>\n    <h2>{`Manage the open state manually`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Dropdown`}</inlineCode>{` element is built to also let you manage the open state and toggle functionality if necessary. Just provide values to the `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onToggle`}</inlineCode>{` props.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` Closing the dropdown on outside clicks will not function automatically if you chose to provide your own `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` state. You'll need to implement this yourself. You can use the `}<inlineCode parentName=\"p\">{`onClickOutside`}</inlineCode>{` prop to implement and customize this behavior.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<State default={false}>\n  {([open, setOpen]) => {\n    \n    const handleToggle = (e) => setOpen(e.target.open)\n    const handleClickOutside = () => setOpen(false)\n\n    return (\n      <Dropdown open={open} onToggle={handleToggle} onClickOutside={handleClickOutside}>\n        <Dropdown.Button>Dropdown</Dropdown.Button>\n        <Dropdown.Menu direction='sw'>\n          <Dropdown.Item>Item 1</Dropdown.Item>\n          <Dropdown.Item>Item 2</Dropdown.Item>\n          <Dropdown.Item>Item 3</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    )\n  }}\n</State>\n`}</code></pre>\n    <h2>{`System props`}</h2>\n    <p>{`Dropdown, Dropdown.Menu, Dropdown.Button, Dropdown.Caret, and Dropdown.Item all get `}<inlineCode parentName=\"p\">{`COMMON`}</inlineCode>{` system props. Read our `}<a parentName=\"p\" {...{\n        \"href\": \"/components/system-props\"\n      }}>{`System Props`}</a>{` doc page for a full list of available props.`}</p>\n    <h2>{`Component props`}</h2>\n    <p>{`The Dropdown component is extended from the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/Details\"\n      }}><inlineCode parentName=\"a\">{`Details`}</inlineCode></a>{` component and gets all props that the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/Details\"\n      }}><inlineCode parentName=\"a\">{`Details`}</inlineCode></a>{` component gets. They are listed below, but you may reference the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/Details\"\n      }}><inlineCode parentName=\"a\">{`Details`}</inlineCode></a>{` docs for more details on how to manage your own `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` state.`}</p>\n    <h4>{`Dropdown`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`defaultOpen`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the initial open/closed state`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`overlay`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets whether or not element will close when user clicks outside of it`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`open`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Use the open prop if you'd like to manage the open state`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`onToggle`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Called whenever user clicks on `}<inlineCode parentName=\"td\">{`summary`}</inlineCode>{` element. If you are controlling your own `}<inlineCode parentName=\"td\">{`open`}</inlineCode>{` state this will be the only function called on click, otherwise it's called before the internal `}<inlineCode parentName=\"td\">{`handleToggle`}</inlineCode>{` function.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`onClickOutside`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Function to call whenever user clicks outside of the Details component. This is optional and only necessary if you are controlling your own `}<inlineCode parentName=\"td\">{`open`}</inlineCode>{` state.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4>{`Dropdown.Menu`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`direction`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`'sw'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the direction of the dropdown menu. Pick from 'ne', 'e', 'se', 's', 'sw', or 'w'`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4>{`Dropdown.Button`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`onClick`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Function`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`none`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Use the `}<inlineCode parentName=\"td\">{`onClick`}</inlineCode>{` handler to add additional functionality when the button is clicked, such as fetching data.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4>{`Dropdown.Caret`}</h4>\n    <p>{`No additional props.`}</p>\n    <h4>{`Dropdown.Item`}</h4>\n    <p>{`No additional props.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}