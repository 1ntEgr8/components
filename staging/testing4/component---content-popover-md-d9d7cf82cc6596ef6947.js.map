{"version":3,"sources":["webpack:///./content/Popover.md","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./src/@primer/gatsby-theme-doctocat/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","listStyle","TableOfContents","items","depth","as","m","p","map","item","key","url","pl","display","py","href","color","title","defaultProps","zIndex","alignItems","alignSelf","gridArea","overflow","Layout","children","pageContext","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","mb","open","icon","ChevronDown","ChevronRight","mr","pt","editUrl","contributors","concat","login"],"mappings":"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","file":"component---content-popover-md-d9d7cf82cc6596ef6947.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/components/components/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Popovers are used to bring attention to specific user interface elements, typically to suggest an action or to guide users through a new experience.`}</p>\n    <p>{`Two components make up a popover; the `}<inlineCode parentName=\"p\">{`Popover`}</inlineCode>{` component controls the absolute positioning of the popover, and `}<inlineCode parentName=\"p\">{`Popover.Content`}</inlineCode>{` renders the inner content of the popover as well as the caret.`}</p>\n    <p>{`By default, the popover renders with absolute positioning, meaning it should usually be wrapped in an element with a relative position in order to be positioned properly. To render the popover with relative positioning, use the `}<inlineCode parentName=\"p\">{`relative`}</inlineCode>{` property.`}</p>\n    <p>{`It can be useful to give the `}<inlineCode parentName=\"p\">{`Popover.Content`}</inlineCode>{` element a margin to help align the popover.`}</p>\n    <h2>{`Default Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jxs\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Relative>\n  <Text textAlign=\"center\" display=\"block\">\n    <ButtonPrimary>Hello!</ButtonPrimary>\n  </Text>\n\n  <Popover relative open={true} caret=\"top\">\n    <Popover.Content mt={2}>\n      <Heading fontSize={2}>Popover heading</Heading>\n      <Text as=\"p\">Message about this particular piece of UI.</Text>\n      <Button>Got it!</Button>\n    </Popover.Content>\n  </Popover>\n</Relative>\n`}</code></pre>\n    <h2>{`Caret position`}</h2>\n    <p><inlineCode parentName=\"p\">{`Popover`}</inlineCode>{` supports various caret positions, which you can specify via the `}<inlineCode parentName=\"p\">{`caret`}</inlineCode>{` property. This demo shows all the valid values for the prop. The default is `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{`. Note that the `}<inlineCode parentName=\"p\">{`top-left`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`bottom-left`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`top-right`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`bottom-right`}</inlineCode>{` values modify the horizontal alignment of the popover.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"metastring\": \"live noinline\",\n        \"live\": true,\n        \"noinline\": true\n      }}>{`function PopoverDemo(props) {\n  const [pos, setPos] = React.useState('top')\n  const [open, setOpen] = React.useState(true)\n\n  return (\n    <Box>\n      <Heading as=\"h3\" fontSize={3}>Caret Position</Heading>\n      <CaretSelector current={pos} onChange={setPos} />\n      <Heading as=\"h3\" fontSize={3}>Popover Visibility</Heading>\n      <Box my={2}>\n        <label>\n          <input type=\"checkbox\" value={open} checked={open}\n            onChange={() => setOpen(open => !open)}/> Open\n        </label>\n      </Box>\n\n      <Relative pt={4}>\n        <Popover relative open={open} caret={pos}>\n          <Popover.Content>\n            <Heading fontSize={2}><code>{pos}</code> caret</Heading>\n            <Text as=\"p\">Message about this particular piece of UI.</Text>\n            <Button onClick={() => setOpen(false)}>Got it!</Button>\n          </Popover.Content>\n        </Popover>\n      </Relative>\n    </Box>\n  )\n}\n\nfunction CaretSelector(props) {\n  const choices = [\n    'top',         'bottom',      'left',         'right',\n    'left-bottom', 'left-top',    'right-bottom', 'right-top',\n    'top-left',    'bottom-left', 'top-right',    'bottom-right'\n  ].map((dir) => (\n    <label>\n      <input key={dir} type='radio' name='caret' value={dir}\n        checked={dir === props.current} onChange={() => props.onChange(dir)} /> {dir}\n    </label>\n))\n\n  return (\n    <Grid gridTemplateColumns=\"repeat(4, auto)\" gridGap={3} my={2}>\n      {choices}\n    </Grid>\n  )\n}\n\nrender(<PopoverDemo />)\n`}</code></pre>\n    <h2>{`System props`}</h2>\n    <p><inlineCode parentName=\"p\">{`Popover`}</inlineCode>{` components get `}<inlineCode parentName=\"p\">{`COMMON`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`LAYOUT`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`POSITION`}</inlineCode>{` system props. `}<inlineCode parentName=\"p\">{`Popover.Content`}</inlineCode>{` components get `}<inlineCode parentName=\"p\">{`COMMON`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`LAYOUT`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`BORDER`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`FLEX`}</inlineCode>{` system props. Read our `}<a parentName=\"p\" {...{\n        \"href\": \"/components/staging/testing4/system-props\"\n      }}>{`System Props`}</a>{` doc page for a full list of available props.`}</p>\n    <h2>{`Component props`}</h2>\n    <h3>{`Popover`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`as`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`'div'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the HTML tag for the component.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`caret`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`'top'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Controls the position of the caret. See below for the list of caret positions.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`open`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Controls the visibility of the popover.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`relative`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Set to true to render the popover using relative positioning.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4>{`Caret Positions`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`caret`}</inlineCode>{` prop can be one of the following values: `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`bottom`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`left`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`right`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`bottom-left`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`bottom-right`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`top-left`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`top-right`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`left-bottom`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`left-top`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`right-bottom`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`right-top`}</inlineCode>{`.`}</p>\n    <h3>{`Popover.Content`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`as`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`'div'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the HTML tag for the component.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","import {BorderBox, Box, Flex, Grid, Heading, Position, Text, Details, StyledOcticon} from '@primer/components'\nimport {ChevronDown, ChevronRight} from '@primer/octicons-react'\nimport React from 'react'\nimport Head from '@primer/gatsby-theme-doctocat/src/components/head'\nimport Header, {HEADER_HEIGHT} from '@primer/gatsby-theme-doctocat/src/components/header'\nimport PageFooter from '@primer/gatsby-theme-doctocat/src/components/page-footer'\nimport Sidebar from '@primer/gatsby-theme-doctocat/src/components/sidebar'\nimport SourceLink from '@primer/gatsby-theme-doctocat/src/components/source-link'\nimport StatusLabel from '@primer/gatsby-theme-doctocat/src/components/status-label'\nimport TableOfContents from '@primer/gatsby-theme-doctocat/src/components/table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {title, description, status, source, additionalContributors = []} = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Grid\n          id=\"skip-nav\"\n          maxWidth=\"100%\"\n          gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n          gridTemplateAreas={['\"heading\" \"content\"', null, '\"heading .\" \"content table-of-contents\"']}\n          gridColumnGap={[null, null, 6, 7]}\n          gridRowGap={3}\n          mx=\"auto\"\n          p={[5, 6, null, 7]}\n          css={{alignItems: 'start', alignSelf: 'start'}}\n        >\n          <BorderBox css={{gridArea: 'heading'}} borderWidth={0} borderBottomWidth={1} borderRadius={0} pb={2}>\n            <Heading>{title}</Heading>\n          </BorderBox>\n          {pageContext.tableOfContents.items ? (\n            <Position\n              display={['none', null, 'block']}\n              css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n              position=\"sticky\"\n              top={HEADER_HEIGHT + 24}\n              maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n            >\n              <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                Table of contents\n              </Text>\n              <TableOfContents items={pageContext.tableOfContents.items} />\n            </Position>\n          ) : null}\n          <Box css={{gridArea: 'content'}}>\n            {status || source ? (\n              <Flex mb={3} alignItems=\"center\">\n                {status ? <StatusLabel status={status} /> : null}\n                <Box mx=\"auto\" />\n                {source ? <SourceLink href={source} /> : null}\n              </Flex>\n            ) : null}\n            {pageContext.tableOfContents.items ? (\n              <Box display={['block', null, 'none']} mb={3}>\n                <Details>\n                  {({open}) => (\n                    <>\n                      <Text as=\"summary\" fontWeight=\"bold\">\n                        <StyledOcticon icon={open ? ChevronDown : ChevronRight} mr={2} />\n                        Table of contents\n                      </Text>\n                      <Box pt={1}>\n                        <TableOfContents items={pageContext.tableOfContents.items} />\n                      </Box>\n                    </>\n                  )}\n                </Details>\n              </Box>\n            ) : null}\n            {children}\n            <PageFooter\n              editUrl={pageContext.editUrl}\n              contributors={pageContext.contributors.concat(additionalContributors.map(login => ({login})))}\n            />\n          </Box>\n        </Grid>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}