(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"5s2V":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return s}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP"),n("q1tI");var a=n("7ljp"),l=n("NC8T");var o={},i={_frontmatter:o},r=l.a;function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,["components"]);return Object(a.b)(r,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The Details component is an HTML ",Object(a.b)("inlineCode",{parentName:"p"},"<details>")," element without native browser styling that optionally uses the ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"https://reactjs.org/docs/render-props.html"}),"render props pattern")," to pass its state to child components."),Object(a.b)("p",null,"You are responsible for rendering your own ",Object(a.b)("inlineCode",{parentName:"p"},"<summary>"),". To style your summary element like a ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"./Button"}),"Button"),", you can use the ",Object(a.b)("inlineCode",{parentName:"p"},"as")," prop:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Button as="summary">Summary text</Button>\n')),Object(a.b)("h2",null,"With static children"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<Details>\n  <Button as="summary">Click me</Button>\n  <p>This should show and hide</p>\n</Details>\n\n')),Object(a.b)("h2",null,"With children as a function"),Object(a.b)("p",null,"The render function gets an object with the ",Object(a.b)("inlineCode",{parentName:"p"},"open")," render prop to allow you to conditionally update UI based on the open state of the dropdown:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"<Details>\n  {({open}) => (\n    <>\n      <Button as=\"summary\">\n        {open ? 'Hide' : 'Show'}\n      </Button>\n      <p>This should show and hide</p>\n    </>\n  )}\n</Details>\n")),Object(a.b)("h2",null,"Manage the open state manually"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"Details")," element is built to also let you manage the open state and toggle functionality if necessary. Just provide values to the ",Object(a.b)("inlineCode",{parentName:"p"},"open")," and ",Object(a.b)("inlineCode",{parentName:"p"},"onToggle")," props."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note:")," The ",Object(a.b)("inlineCode",{parentName:"p"},"overlay")," prop will not function automatically if you chose to provide your own ",Object(a.b)("inlineCode",{parentName:"p"},"open")," state. You'll need to implement this yourself. You can use the ",Object(a.b)("inlineCode",{parentName:"p"},"onClickOutside")," prop to implement and customize this behavior."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<State default={false}>\n  {([open, setOpen]) => {\n    const handleToggle = (e) => setOpen(e.target.open)\n    const handleClickOutside = () => setOpen(false)\n\n    return (\n      <Details open={open} onToggle={handleToggle} onClickOutside={handleClickOutside} overlay>\n        <Button as="summary">Click me</Button>\n        <p>This should show and hide</p>\n      </Details>\n    )\n  }}\n</State>\n')),Object(a.b)("h2",null,"System props"),Object(a.b)("p",null,"Details components get ",Object(a.b)("inlineCode",{parentName:"p"},"COMMON")," system props. Read our ",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/components/staging/test-branches/system-props"}),"System Props")," doc page for a full list of available props."),Object(a.b)("h2",null,"Component props"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object.assign({parentName:"tr"},{align:"left"}),"Name"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:"left"}),"Type"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:"center"}),"Default"),Object(a.b)("th",Object.assign({parentName:"tr"},{align:"left"}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"defaultOpen"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Boolean"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"center"})),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Sets the initial open/closed state")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"overlay"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Boolean"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"center"}),"false"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Sets whether or not element will close when user clicks outside of it")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"open"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Boolean"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"center"})),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Use the open prop if you'd like to manage the open state")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"onToggle"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"center"})),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Called whenever user clicks on ",Object(a.b)("inlineCode",{parentName:"td"},"summary")," element. If you are controlling your own ",Object(a.b)("inlineCode",{parentName:"td"},"open")," state this will be the only function called on click, otherwise it's called before the internal ",Object(a.b)("inlineCode",{parentName:"td"},"handleToggle")," function.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"onClickOutside"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Function"),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"center"})),Object(a.b)("td",Object.assign({parentName:"tr"},{align:"left"}),"Function to call whenever user clicks outside of the Details component. This is optional and only necessary if you are controlling your own ",Object(a.b)("inlineCode",{parentName:"td"},"open")," state.")))))}s.isMDXComponent=!0},NC8T:function(e,t,n){"use strict";var a=n("UutA"),l=n("oXiK"),o=n("aOgs"),i=n("q1tI"),r=n.n(i),s=n("8gyx"),c=n("VhsB"),b=n("nkI/"),p=n("bWhc"),m=n("og4h"),d=n("sqpL"),u=Object(a.f)(l.Box).withConfig({displayName:"table-of-contents___StyledBox",componentId:"sc-4czghc-0"})({listStyle:"none"});function O(e){var t=e.items,n=e.depth;return r.a.createElement(u,{as:"ul",m:0,p:0},t.map((function(e){return r.a.createElement(l.Box,{as:"li",key:e.url,pl:n>0?3:0},r.a.createElement(l.Link,{display:"inline-block",py:1,href:e.url,color:"gray.6"},e.title),e.items?r.a.createElement(O,{items:e.items,depth:n+1}):null)})))}O.defaultProps={depth:0};var g=O,j=Object(a.f)(l.Flex).withConfig({displayName:"layout___StyledFlex",componentId:"sc-15zk0ku-0"})({zIndex:0}),h=Object(a.f)(l.Grid).withConfig({displayName:"layout___StyledGrid",componentId:"sc-15zk0ku-1"})({alignItems:"start",alignSelf:"start"}),f=Object(a.f)(l.BorderBox).withConfig({displayName:"layout___StyledBorderBox",componentId:"sc-15zk0ku-2"})({gridArea:"heading"}),y=Object(a.f)(l.Position).withConfig({displayName:"layout___StyledPosition",componentId:"sc-15zk0ku-3"})({gridArea:"table-of-contents",overflow:"auto"}),N=Object(a.f)(l.Box).withConfig({displayName:"layout___StyledBox",componentId:"sc-15zk0ku-4"})({gridArea:"content"});t.a=function(e){var t=e.children,n=e.pageContext,a=n.frontmatter,i=a.title,u=a.description,O=a.status,C=a.source,x=a.additionalContributors,k=void 0===x?[]:x;return r.a.createElement(l.Flex,{flexDirection:"column",minHeight:"100vh"},r.a.createElement(s.a,{title:i,description:u}),r.a.createElement(c.b,null),r.a.createElement(j,{flex:"1 1 auto",flexDirection:"row"},r.a.createElement(l.Box,{display:["none",null,null,"block"]},r.a.createElement(p.a,null)),r.a.createElement(h,{id:"skip-nav",maxWidth:"100%",gridTemplateColumns:["100%",null,"minmax(0, 65ch) 220px"],gridTemplateAreas:['"heading" "content"',null,'"heading ." "content table-of-contents"'],gridColumnGap:[null,null,6,7],gridRowGap:3,mx:"auto",p:[5,6,null,7]},r.a.createElement(f,{borderWidth:0,borderBottomWidth:1,borderRadius:0,pb:2},r.a.createElement(l.Heading,null,i)),n.tableOfContents.items?r.a.createElement(y,{display:["none",null,"block"],position:"sticky",top:c.a+24,maxHeight:"calc(100vh - "+c.a+"px - 24px)"},r.a.createElement(l.Text,{display:"inline-block",fontWeight:"bold",mb:1},"Table of contents"),r.a.createElement(g,{items:n.tableOfContents.items})):null,r.a.createElement(N,null,O||C?r.a.createElement(l.Flex,{mb:3,alignItems:"center"},O?r.a.createElement(d.a,{status:O}):null,r.a.createElement(l.Box,{mx:"auto"}),C?r.a.createElement(m.a,{href:C}):null):null,n.tableOfContents.items?r.a.createElement(l.Box,{display:["block",null,"none"],mb:3},r.a.createElement(l.Details,null,(function(e){var t=e.open;return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.Text,{as:"summary",fontWeight:"bold"},r.a.createElement(l.StyledOcticon,{icon:t?o.b:o.c,mr:2}),"Table of contents"),r.a.createElement(l.Box,{pt:1},r.a.createElement(g,{items:n.tableOfContents.items})))}))):null,t,r.a.createElement(b.a,{editUrl:n.editUrl,contributors:n.contributors.concat(k.map((function(e){return{login:e}})))})))))}}}]);
//# sourceMappingURL=component---content-details-md-37e9ccb5ca51b7fb5b1c.js.map