{"version":3,"sources":["webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./src/@primer/gatsby-theme-doctocat/components/layout.js","webpack:///./content/overriding-styles.mdx"],"names":["listStyle","TableOfContents","items","depth","as","m","p","map","item","key","url","pl","display","py","href","color","title","defaultProps","zIndex","alignItems","alignSelf","gridArea","overflow","Layout","children","pageContext","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","borderWidth","borderBottomWidth","borderRadius","pb","tableOfContents","position","top","HEADER_HEIGHT","maxHeight","fontWeight","mb","open","icon","ChevronDown","ChevronRight","mr","pt","editUrl","contributors","concat","login","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---content-overriding-styles-mdx-e3709064724e966f0ece.js","sourcesContent":["import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","import {BorderBox, Box, Flex, Grid, Heading, Position, Text, Details, StyledOcticon} from '@primer/components'\nimport {ChevronDown, ChevronRight} from '@primer/octicons-react'\nimport React from 'react'\nimport Head from '@primer/gatsby-theme-doctocat/src/components/head'\nimport Header, {HEADER_HEIGHT} from '@primer/gatsby-theme-doctocat/src/components/header'\nimport PageFooter from '@primer/gatsby-theme-doctocat/src/components/page-footer'\nimport Sidebar from '@primer/gatsby-theme-doctocat/src/components/sidebar'\nimport SourceLink from '@primer/gatsby-theme-doctocat/src/components/source-link'\nimport StatusLabel from '@primer/gatsby-theme-doctocat/src/components/status-label'\nimport TableOfContents from '@primer/gatsby-theme-doctocat/src/components/table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {title, description, status, source, additionalContributors = []} = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Grid\n          id=\"skip-nav\"\n          maxWidth=\"100%\"\n          gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n          gridTemplateAreas={['\"heading\" \"content\"', null, '\"heading .\" \"content table-of-contents\"']}\n          gridColumnGap={[null, null, 6, 7]}\n          gridRowGap={3}\n          mx=\"auto\"\n          p={[5, 6, null, 7]}\n          css={{alignItems: 'start', alignSelf: 'start'}}\n        >\n          <BorderBox css={{gridArea: 'heading'}} borderWidth={0} borderBottomWidth={1} borderRadius={0} pb={2}>\n            <Heading>{title}</Heading>\n          </BorderBox>\n          {pageContext.tableOfContents.items ? (\n            <Position\n              display={['none', null, 'block']}\n              css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n              position=\"sticky\"\n              top={HEADER_HEIGHT + 24}\n              maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n            >\n              <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                Table of contents\n              </Text>\n              <TableOfContents items={pageContext.tableOfContents.items} />\n            </Position>\n          ) : null}\n          <Box css={{gridArea: 'content'}}>\n            {status || source ? (\n              <Flex mb={3} alignItems=\"center\">\n                {status ? <StatusLabel status={status} /> : null}\n                <Box mx=\"auto\" />\n                {source ? <SourceLink href={source} /> : null}\n              </Flex>\n            ) : null}\n            {pageContext.tableOfContents.items ? (\n              <Box display={['block', null, 'none']} mb={3}>\n                <Details>\n                  {({open}) => (\n                    <>\n                      <Text as=\"summary\" fontWeight=\"bold\">\n                        <StyledOcticon icon={open ? ChevronDown : ChevronRight} mr={2} />\n                        Table of contents\n                      </Text>\n                      <Box pt={1}>\n                        <TableOfContents items={pageContext.tableOfContents.items} />\n                      </Box>\n                    </>\n                  )}\n                </Details>\n              </Box>\n            ) : null}\n            {children}\n            <PageFooter\n              editUrl={pageContext.editUrl}\n              contributors={pageContext.contributors.concat(additionalContributors.map(login => ({login})))}\n            />\n          </Box>\n        </Grid>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/components/components/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Our goal with Primer Components is to hit the sweet spot between providing too little and too much styling flexibility; too little and the design system is too rigid, and too much and it becomes too difficult to maintain a consistent style. Our components already support a standard set of `}<a parentName=\"p\" {...{\n        \"href\": \"/components/staging/emily/testing3lol/system-props\"\n      }}>{`system props`}</a>{`, but sometimes a component just isn't `}<em parentName=\"p\">{`quite`}</em>{` flexible enough to look the way you need it to look. For those cases, we provide the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop allows ad-hoc styling that is still theme aware. Declare the styles you want to apply in camel-cased object notation, and try to use theme values in appropriate CSS properties when possible. If you've passed a custom theme using `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` or a `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` prop, the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop will honor the custom theme. For more information on theming in Primer Components, check out `}<a parentName=\"p\" {...{\n        \"href\": \"/components/staging/emily/testing3lol/primer-theme\"\n      }}>{`the Primer Theme documentation`}</a>{`.`}</p>\n    <h2>{`When to use the `}<inlineCode parentName=\"h2\">{`sx`}</inlineCode>{` prop`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop provides a lot of power, which means it is an easy tool to abuse. To best make use of it, we recommend following these guidelines:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`sx`}</inlineCode>{` prop for small stylistic changes to components. For more substantial changes, consider abstracting your style changes into your own wrapper component.`}</li>\n      <li parentName=\"ul\">{`Use `}<a parentName=\"li\" {...{\n          \"href\": \"/components/staging/emily/testing3lol/system-props\"\n        }}>{`system props`}</a>{` instead of the `}<inlineCode parentName=\"li\">{`sx`}</inlineCode>{` prop whenever possible.`}</li>\n      <li parentName=\"ul\">{`Avoid nesting and pseudo-selectors in `}<inlineCode parentName=\"li\">{`sx`}</inlineCode>{` prop values when possible.`}</li>\n    </ul>\n    <h2>{`Basic example`}</h2>\n    <p>{`This example demonstrates applying a bottom border to `}<inlineCode parentName=\"p\">{`Heading`}</inlineCode>{`, a component that does not receive `}<inlineCode parentName=\"p\">{`BORDER`}</inlineCode>{` system props. The `}<inlineCode parentName=\"p\">{`borderBottomWidth`}</inlineCode>{` value comes from `}<inlineCode parentName=\"p\">{`theme.borderWidths`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`borderBottomColor`}</inlineCode>{` comes from `}<inlineCode parentName=\"p\">{`theme.colors`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Heading pb={2}>Heading</Heading>\n\n<Heading\n  pb={2}\n  sx={{\n    borderBottomWidth: 1,\n    borderBottomColor: 'border.gray',\n    borderBottomStyle: 'solid'\n  }}>\n    Heading with bottom border\n</Heading>\n`}</code></pre>\n    <h2>{`Responsive values`}</h2>\n    <p>{`Just like `}<a parentName=\"p\" {...{\n        \"href\": \"https://styled-system.com/responsive-styles\"\n      }}>{`values passed to system props`}</a>{`, values in the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop can be provided as arrays to provide responsive styling.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<BorderBox\n  p={2}\n  sx={{\n    bg: ['red.1', 'green.1', 'blue.1', 'purple.1', 'yellow.1']\n  }}>\n    Responsive background color\n</BorderBox>\n`}</code></pre>\n    <h2>{`Nesting, pseudo-classes, and pseudo-elements`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{` prop also allows for declaring styles based on media queries, psueudo-classes, and pseudo-elements. This example, though contrived, demonstrates the ability:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live\",\n        \"live\": true\n      }}>{`<Box sx={{\n    '> *': {    \n    borderWidth: 1, \n    borderColor: 'border.gray', \n    borderStyle: 'solid',   \n    borderBottomWidth: 0,   \n    padding: 2, \n    ':last-child': {    \n      borderBottomWidth: 1  \n    },  \n    ':hover': { \n      bg: 'gray.1'  \n    }   \n  } \n}}>\n  <Box>First</Box>\n  <Box>Second</Box>\n  <Box>Third</Box>\n</Box>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}