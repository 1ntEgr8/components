{"version":3,"sources":["webpack:///./content/primer-theme.md","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","TableOfContents","items","React","useContext","MDXContext","ul","List","li","ListItem","a","Link","map","item","key","url","href","title","Layout","children","pageContext","h1","H1","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","display","mb","alignItems","mx","tableOfContents","editUrl","contributors","concat","login"],"mappings":"4RAOO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,6FAA4E,+BAAGC,WAAW,KAAQ,CAC9F,KAAQ,kEADgE,cAA5E,+KAGkI,+BAAGA,WAAW,KAAQ,CACpJ,KAAQ,gDADsH,qBAHlI,KAMA,kJAAiI,0BAAYA,WAAW,KAAvB,SAAjI,YAA+L,0BAAYA,WAAW,KAAvB,YAA/L,YAAgQ,0BAAYA,WAAW,KAAvB,UAAhQ,MACF,0BAAYA,WAAW,KAAvB,4BACE,2CAA0B,+BAAGA,WAAW,KAAQ,CAC5C,KAAQ,4CADc,iBAA1B,iCAE4D,0BAAYA,WAAW,KAAvB,UAF5D,eAE8H,0BAAYA,WAAW,KAAvB,YAF9H,8DAGA,oDAAmC,+BAAGA,WAAW,KAAQ,CACrD,KAAQ,kEADuB,QAAnC,KAGA,wCACA,sKACA,qFACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gFAAoG,0BAAYA,WAAW,KAAvB,mBAApG,SAAyK,+BAAGA,WAAW,KAAQ,CAC3L,KAAQ,mCAD6J,qBAAzK,KAGA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,qfAuBrB,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,YAAoC,+BAAGA,WAAW,UAAa,CAC5E,KAAQ,mCADyC,qBAApC,MAEoB,0BAAYA,WAAW,UAAvB,mBAFpB,qCAIrB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gFAGJ,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8YAkBL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sDAA0E,0BAAYA,WAAW,KAAvB,SAA1E,mBACA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,uMAcrB,iBAAGA,WAAW,MAAK,sBAAQA,WAAW,KAAnB,qEAA6F,0BAAYA,WAAW,UAAvB,uBAA7F,uBAGvB,iCAAgB,+BAAGA,WAAW,KAAQ,CAClC,KAAQ,uCADI,sBAAhB,uDAOJJ,EAAWK,gBAAiB,G,uKCxGbC,MAnBf,SAASA,EAAT,GAAmC,IAATC,EAAQ,EAARA,MAAQ,EAK5BC,IAAMC,WAAWC,KALW,IAE9BC,GAAIC,OAF0B,MAEnB,KAFmB,MAG9BC,GAAIC,OAH0B,MAGf,KAHe,MAI9BC,EAAGC,OAJ2B,MAIpB,IAJoB,EAOhC,OACE,kBAACJ,EAAD,KACGL,EAAMU,KAAI,SAAAC,GAAI,OACb,kBAACJ,EAAD,CAAUK,IAAKD,EAAKE,KAClB,kBAACJ,EAAD,CAAMK,KAAMH,EAAKE,KAAMF,EAAKI,OAC3BJ,EAAKX,MAAQ,kBAACD,EAAD,CAAiBC,MAAOW,EAAKX,QAAY,WC4ClDgB,IA/Cf,YAA0C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAAc,EACfjB,IAAMC,WAAWC,KAAlCgB,GAAIC,OAD4B,MACvB,KADuB,IAQnCF,EAAYG,YALdN,EAHqC,EAGrCA,MACAO,EAJqC,EAIrCA,YACAC,EALqC,EAKrCA,OACAC,EANqC,EAMrCA,OANqC,IAOrCC,8BAPqC,MAOZ,GAPY,EAUvC,OACE,kBAAC,OAAD,CAAMC,cAAc,SAASC,UAAU,SACrC,kBAAC,IAAD,CAAMZ,MAAOA,EAAOO,YAAaA,IACjC,kBAAC,IAAD,MACA,kBAAC,OAAD,CAAMM,KAAK,WAAWF,cAAc,OAClC,kBAAC,MAAD,CAAKG,QAAS,CAAC,OAAQ,KAAM,KAAM,UACjC,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAACT,EAAD,KAAKL,GAEJQ,GAAUC,EACT,kBAAC,OAAD,CAAMM,GAAI,EAAGC,WAAW,UACrBR,EAAS,kBAAC,IAAD,CAAaA,OAAQA,IAAa,KAC5C,kBAAC,MAAD,CAAKS,GAAG,SACPR,EAAS,kBAAC,IAAD,CAAYV,KAAMU,IAAa,MAEzC,KAEHN,EAAYe,gBAAgBjC,MAC3B,kBAAC,EAAD,CAAiBA,MAAOkB,EAAYe,gBAAgBjC,QAClD,KAEHiB,EAED,kBAAC,IAAD,CACEiB,QAAShB,EAAYgB,QACrBC,aAAcjB,EAAYiB,aAAaC,OACrCX,EAAuBf,KAAI,SAAA2B,GAAK,MAAK,CAACA","file":"component---content-primer-theme-md-dd45c0b0975f28bec1ce.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/emily/github/components/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nimport { theme } from '@primer/components';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Primer Components come with built-in access to our Primer theme. The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/primer/components/blob/master/src/theme.js\"\n      }}>{`theme file`}</a>{` contains an object which holds values\nfor common variables such as color, fonts, box shadows, and more. Our theme file pulls many of its color and typography values from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/primer/primer-primitives\"\n      }}>{`primer-primitives`}</a>{`.`}</p>\n    <p>{`Many of our theme keys correspond to system props on our components. For example, if you'd like to set the max width on a `}<inlineCode parentName=\"p\">{`<Box>`}</inlineCode>{` set the `}<inlineCode parentName=\"p\">{`maxWidth`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`medium`}</inlineCode>{`:\n`}<inlineCode parentName=\"p\">{`<Box maxWidth='medium'>`}</inlineCode></p>\n    <p>{`In the background, `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jxnblk/styled-system\"\n      }}>{`styled-system`}</a>{` does the work of finding the `}<inlineCode parentName=\"p\">{`medium`}</inlineCode>{` value from `}<inlineCode parentName=\"p\">{`maxWidth`}</inlineCode>{` key in the theme file and applying the corresponding CSS.`}</p>\n    <p>{`Our full theme can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/primer/components/blob/master/src/theme.js\"\n      }}>{`here`}</a>{`.`}</p>\n    <h3>{`Custom Theming`}</h3>\n    <p>{`Custom theming is an optional way to override the Primer values that control color, spacing, typography, and other aspects of our components.`}</p>\n    <p>{`There are two ways to change the theme of Primer components:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`You can override the entire theme for an entire tree of components using the `}<inlineCode parentName=\"p\">{`<ThemeProvider>`}</inlineCode>{` from `}<a parentName=\"p\" {...{\n            \"href\": \"https://styled-components.com/\"\n          }}>{`styled-components`}</a>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-jsx\"\n          }}>{`import {Block, Button, Text, theme as primer} from '@primer/components'\nimport {ThemeProvider} from 'styled-components'\n\n// a theme with custom spacing and font sizes\nconst theme = {\n  ...primer,\n  space: [0, 8, 16, 32, 64],\n  fontSizes: [10, 12, 16, 24, 48]\n}\n\n// override\ntheme.colors.bodytext = '#111'\n\nexport default () => (\n  <ThemeProvider theme={theme}>\n    <Block color='bodytext' p={4}>\n      <Text fontSize={4}>Hello, world!</Text>\n    </Block>\n  </ThemeProvider>\n)\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`⚠️ Note: `}<a parentName=\"strong\" {...{\n              \"href\": \"https://styled-components.com/\"\n            }}>{`styled-components`}</a>{`'s `}<inlineCode parentName=\"strong\">{`<ThemeProvider>`}</inlineCode>{` only allows exactly one child.`}</strong></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`You can merge the Primer theme with your custom theme using Object.assign:`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ThemeProvider} from \\`styled-components\\`\nimport {theme} from '@primer/components'\n\nconst customTheme = { ... }\n\n\nconst App = (props) => {\n  return (\n    <div>\n      <ThemeProvider theme={Object.assign({}, theme, customTheme)}> // matching keys in customTheme will override keys in the Primer theme\n        <div>your app here</div>\n      </ThemeProvider>\n    </div>\n  )\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`You can theme individual components by passing the `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` prop directly:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-jsx\"\n          }}>{`import {Text} from '@primer/components'\n\nconst theme = {\n  colors: {\n    magenta: '#f0f'\n  }\n}\n\nexport default () => (\n  <Text theme={theme} color='magenta'>Hi, I'm magenta!</Text>\n)\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`☝️ This is an intentionally convoluted example, since you can use `}<inlineCode parentName=\"strong\">{`<Text color='#f0f'>`}</inlineCode>{` out of the box.`}</strong></p>\n      </li>\n    </ol>\n    <p>{`Read the `}<a parentName=\"p\" {...{\n        \"href\": \"https://styled-system.com/#theming\"\n      }}>{`styled-system docs`}</a>{` for more information on theming in styled-system.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import {MDXContext} from '@mdx-js/react'\nimport React from 'react'\n\nfunction TableOfContents({items}) {\n  const {\n    ul: List = 'ul',\n    li: ListItem = 'li',\n    a: Link = 'a',\n  } = React.useContext(MDXContext)\n\n  return (\n    <List>\n      {items.map(item => (\n        <ListItem key={item.url}>\n          <Link href={item.url}>{item.title}</Link>\n          {item.items ? <TableOfContents items={item.items} /> : null}\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nexport default TableOfContents\n","import {MDXContext} from '@mdx-js/react'\nimport {Box, Flex} from '@primer/components'\nimport React from 'react'\nimport Container from './container'\nimport Head from './head'\nimport Header from './header'\nimport PageFooter from './page-footer'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {h1: H1 = 'h1'} = React.useContext(MDXContext)\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\">\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Container>\n          <H1>{title}</H1>\n\n          {status || source ? (\n            <Flex mb={4} alignItems=\"center\">\n              {status ? <StatusLabel status={status} /> : null}\n              <Box mx=\"auto\" />\n              {source ? <SourceLink href={source} /> : null}\n            </Flex>\n          ) : null}\n\n          {pageContext.tableOfContents.items ? (\n            <TableOfContents items={pageContext.tableOfContents.items} />\n          ) : null}\n\n          {children}\n\n          <PageFooter\n            editUrl={pageContext.editUrl}\n            contributors={pageContext.contributors.concat(\n              additionalContributors.map(login => ({login})),\n            )}\n          />\n        </Container>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}