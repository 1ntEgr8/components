{"version":3,"sources":["webpack:///./content/getting-started.md","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","TableOfContents","items","React","useContext","MDXContext","ul","List","li","ListItem","a","Link","map","item","key","url","href","title","Layout","children","pageContext","h1","H1","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","display","mb","alignItems","mx","tableOfContents","editUrl","contributors","concat","login"],"mappings":"4OAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,sCACA,oEAAmD,0BAAYC,WAAW,KAAvB,kCAAnD,yBACA,yIACA,uEACA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,mDAEL,uIAAsH,0BAAYA,WAAW,KAAvB,OAAtH,YACA,uBAAK,kCAAMA,WAAW,OAAU,IAA3B,qGAIL,sDACA,oTACA,mJACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,qBAApB,+BACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SAApB,mCAEF,oCACA,gNAA+L,0BAAYA,WAAW,KAAvB,gBAA/L,KACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,0QAaL,iDAAgC,0BAAYA,WAAW,KAAvB,SAAhC,KAAuF,0BAAYA,WAAW,KAAvB,eAAvF,SAAwJ,0BAAYA,WAAW,KAAvB,eAAxJ,kBAAkO,0BAAYA,WAAW,KAAvB,UAAlO,OAA4R,+BAAGA,WAAW,KAAQ,CAC9S,KAAQ,yEADgR,4BAA5R,MAOJJ,EAAWK,gBAAiB,G,oIC1CbC,MAnBf,SAASA,EAAT,GAAmC,IAATC,EAAQ,EAARA,MAAQ,EAK5BC,IAAMC,WAAWC,KALW,IAE9BC,GAAIC,OAF0B,MAEnB,KAFmB,MAG9BC,GAAIC,OAH0B,MAGf,KAHe,MAI9BC,EAAGC,OAJ2B,MAIpB,IAJoB,EAOhC,OACE,kBAACJ,EAAD,KACGL,EAAMU,KAAI,SAAAC,GAAI,OACb,kBAACJ,EAAD,CAAUK,IAAKD,EAAKE,KAClB,kBAACJ,EAAD,CAAMK,KAAMH,EAAKE,KAAMF,EAAKI,OAC3BJ,EAAKX,MAAQ,kBAACD,EAAD,CAAiBC,MAAOW,EAAKX,QAAY,WC4ClDgB,IA/Cf,YAA0C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAAc,EACfjB,IAAMC,WAAWC,KAAlCgB,GAAIC,OAD4B,MACvB,KADuB,IAQnCF,EAAYG,YALdN,EAHqC,EAGrCA,MACAO,EAJqC,EAIrCA,YACAC,EALqC,EAKrCA,OACAC,EANqC,EAMrCA,OANqC,IAOrCC,8BAPqC,MAOZ,GAPY,EAUvC,OACE,kBAAC,OAAD,CAAMC,cAAc,SAASC,UAAU,SACrC,kBAAC,IAAD,CAAMZ,MAAOA,EAAOO,YAAaA,IACjC,kBAAC,IAAD,MACA,kBAAC,OAAD,CAAMM,KAAK,WAAWF,cAAc,OAClC,kBAAC,MAAD,CAAKG,QAAS,CAAC,OAAQ,KAAM,KAAM,UACjC,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAACT,EAAD,KAAKL,GAEJQ,GAAUC,EACT,kBAAC,OAAD,CAAMM,GAAI,EAAGC,WAAW,UACrBR,EAAS,kBAAC,IAAD,CAAaA,OAAQA,IAAa,KAC5C,kBAAC,MAAD,CAAKS,GAAG,SACPR,EAAS,kBAAC,IAAD,CAAYV,KAAMU,IAAa,MAEzC,KAEHN,EAAYe,gBAAgBjC,MAC3B,kBAAC,EAAD,CAAiBA,MAAOkB,EAAYe,gBAAgBjC,QAClD,KAEHiB,EAED,kBAAC,IAAD,CACEiB,QAAShB,EAAYgB,QACrBC,aAAcjB,EAAYiB,aAAaC,OACrCX,EAAuBf,KAAI,SAAA2B,GAAK,MAAK,CAACA","file":"component---content-getting-started-md-53323b295774d2f3eac8.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/emily/github/components/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Installation`}</h2>\n    <p>{`To get started using Primer Components, run `}<inlineCode parentName=\"p\">{`npm install @primer/components`}</inlineCode>{` in your application.`}</p>\n    <p>{`You can now start importing Primer Components! There are a few ways to import Primer Components. You can either:`}</p>\n    <p>{`Import them individually from the main bundle:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import {Box, Flex} from '@primer/components'\n`}</code></pre>\n    <p>{`or, if you've configured your application to tree-shake with webpack, you can import them indivdually from the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` folder:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import Box from '@primer/components/src/Box'\nimport Flex from '@primer/components/src/Flex'\n\n`}</code></pre>\n    <h2>{`Installing Peer Dependencies`}</h2>\n    <p>{`Primer Components is shipped with a few libraries labeled as peer dependencies. These libraries are separated because they are commonly already installed in the host project. This keeps the bundle size down and allows you to specify the version number you'd like in your own project.`}</p>\n    <p>{`Before getting started using Primer Components, make sure that the following libraries are installed in your host project:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`styled-components`}</inlineCode>{` at version 4.0.0 or higher`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`react`}</inlineCode>{` at versions 16.8.0 and higher`}</li>\n    </ul>\n    <h2>{`BaseStyles`}</h2>\n    <p>{`In order to set basic color, font-family, and line-heights across your project, you will need to establish base Primer styles for your app by wrapping all of your Primer components in `}<inlineCode parentName=\"p\">{`<BaseStyles>`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {BaseStyles, Box, Heading} from '@primer/components'\n\nexport default const MyApp = () => (\n  <BaseStyles>\n    <Box m={4}>\n      <Heading mb={2}>Hello, world!</Heading>\n      <p>This will get Primer text styles.</p>\n    </Box>\n  </BaseStyles>\n)\n`}</code></pre>\n    <p>{`This will apply the same `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`font-family`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`line-height`}</inlineCode>{` styles to the `}<inlineCode parentName=\"p\">{`<body>`}</inlineCode>{` as `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/primer/css/blob/master/src/base/base.scss#L15-L20\"\n      }}>{`Primer CSS's base styles`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import {MDXContext} from '@mdx-js/react'\nimport React from 'react'\n\nfunction TableOfContents({items}) {\n  const {\n    ul: List = 'ul',\n    li: ListItem = 'li',\n    a: Link = 'a',\n  } = React.useContext(MDXContext)\n\n  return (\n    <List>\n      {items.map(item => (\n        <ListItem key={item.url}>\n          <Link href={item.url}>{item.title}</Link>\n          {item.items ? <TableOfContents items={item.items} /> : null}\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nexport default TableOfContents\n","import {MDXContext} from '@mdx-js/react'\nimport {Box, Flex} from '@primer/components'\nimport React from 'react'\nimport Container from './container'\nimport Head from './head'\nimport Header from './header'\nimport PageFooter from './page-footer'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {h1: H1 = 'h1'} = React.useContext(MDXContext)\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\">\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Container>\n          <H1>{title}</H1>\n\n          {status || source ? (\n            <Flex mb={4} alignItems=\"center\">\n              {status ? <StatusLabel status={status} /> : null}\n              <Box mx=\"auto\" />\n              {source ? <SourceLink href={source} /> : null}\n            </Flex>\n          ) : null}\n\n          {pageContext.tableOfContents.items ? (\n            <TableOfContents items={pageContext.tableOfContents.items} />\n          ) : null}\n\n          {children}\n\n          <PageFooter\n            editUrl={pageContext.editUrl}\n            contributors={pageContext.contributors.concat(\n              additionalContributors.map(login => ({login})),\n            )}\n          />\n        </Container>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}