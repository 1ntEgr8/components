(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{HjAN:function(e,t,n){"use strict";var a=n("7ljp"),c=n("oXiK"),l=n("q1tI"),o=n.n(l),r=n("f2CV"),i=n("8gyx"),s=n("VhsB"),p=n("oo4l"),m=n("Evc+"),u=n("og4h"),b=n("sqpL");var O=function e(t){var n=t.items,c=o.a.useContext(a.a),l=c.ul,r=void 0===l?"ul":l,i=c.li,s=void 0===i?"li":i,p=c.a,m=void 0===p?"a":p;return o.a.createElement(r,null,n.map((function(t){return o.a.createElement(s,{key:t.url},o.a.createElement(m,{href:t.url},t.title),t.items?o.a.createElement(e,{items:t.items}):null)})))};t.a=function(e){var t=e.children,n=e.pageContext,l=o.a.useContext(a.a).h1,d=void 0===l?"h1":l,j=n.frontmatter,g=j.title,f=j.description,h=j.status,N=j.source,x=j.additionalContributors,y=void 0===x?[]:x;return o.a.createElement(c.Flex,{flexDirection:"column",minHeight:"100vh"},o.a.createElement(i.a,{title:g,description:f}),o.a.createElement(s.a,null),o.a.createElement(c.Flex,{flex:"1 1 auto",flexDirection:"row"},o.a.createElement(c.Box,{display:["none",null,null,"block"]},o.a.createElement(m.a,null)),o.a.createElement(r.a,null,o.a.createElement(d,null,g),h||N?o.a.createElement(c.Flex,{mb:4,alignItems:"center"},h?o.a.createElement(b.a,{status:h}):null,o.a.createElement(c.Box,{mx:"auto"}),N?o.a.createElement(u.a,{href:N}):null):null,n.tableOfContents.items?o.a.createElement(O,{items:n.tableOfContents.items}):null,t,o.a.createElement(p.a,{editUrl:n.editUrl,contributors:n.contributors.concat(y.map((function(e){return{login:e}})))}))))}},wWPQ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return u}));n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("91GP");var a=n("q1tI"),c=n.n(a),l=n("7ljp"),o=n("HjAN"),r=n("igXT"),i=n("oXiK");var s={},p={_frontmatter:s},m=o.a;function u(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,c={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,["components"]);return Object(l.c)(m,Object.assign({},p,n,{components:t,mdxType:"MDXLayout"}),Object(l.c)("p",null,"The dialog component is used for all modals. It renders on top of the rest of the app with an overlay."),Object(l.c)("p",null,Object(l.c)("strong",{parentName:"p"},"Note:")," You'll need to manage the ",Object(l.c)("inlineCode",{parentName:"p"},"isOpen")," state in a wrapper component of your own. For documentation purposes only we've created a mock ",Object(l.c)("inlineCode",{parentName:"p"},"State")," to handle this, but you should handle the state in the component you consume ",Object(l.c)("inlineCode",{parentName:"p"},"Dialog")," in or in a wrapper component."),Object(l.c)(r.a,{default:!1,mdxType:"State"},(function(e){var t=e[0],n=e[1];return Object(l.c)(c.a.Fragment,null,Object(l.c)(i.Button,{onClick:function(){return n(!0)},mdxType:"Button"},"Open"),Object(l.c)(i.Dialog,{title:"Title",isOpen:t,onDismiss:function(){return n(!1)},mdxType:"Dialog"},Object(l.c)(i.Box,{p:3,mdxType:"Box"},Object(l.c)(i.Text,{fontFamily:"sans-serif",mdxType:"Text"},"Some content"))))})),Object(l.c)("pre",null,Object(l.c)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<State default={false}>\n  {([isOpen, setIsOpen]) => (\n    <>\n      <Button onClick={() => setIsOpen(true)}>Open</Button>\n      <Dialog title="Title" isOpen={isOpen} onDismiss={() => setIsOpen(false)}>\n        <Box p={3}>\n          <Text fontFamily="sans-serif">Some content</Text>\n        </Box>\n      </Dialog>\n    </>\n  )}\n</State>\n')),Object(l.c)("p",null,"You can also pass any React node as the title to override the styling:"),Object(l.c)("pre",null,Object(l.c)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Dialog title={<Text fontSize={6}>Title</Text>}>\n")),Object(l.c)("h2",null,"System props"),Object(l.c)("p",null,"Dialog components get the ",Object(l.c)("inlineCode",{parentName:"p"},"COMMON")," and ",Object(l.c)("inlineCode",{parentName:"p"},"LAYOUT")," categories of system props. Read our ",Object(l.c)("a",Object.assign({parentName:"p"},{href:"/components/system-props"}),"System Props")," doc page for a full list of available props."),Object(l.c)("h2",null,"Component props"),Object(l.c)("p",null,"These props are ",Object(l.c)("strong",{parentName:"p"},"all required"),"."),Object(l.c)("table",null,Object(l.c)("thead",{parentName:"table"},Object(l.c)("tr",{parentName:"thead"},Object(l.c)("th",Object.assign({parentName:"tr"},{align:"left"}),"Prop name"),Object(l.c)("th",Object.assign({parentName:"tr"},{align:"left"}),"Type"),Object(l.c)("th",Object.assign({parentName:"tr"},{align:"left"}),"Description"))),Object(l.c)("tbody",{parentName:"table"},Object(l.c)("tr",{parentName:"tbody"},Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"title"),Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"String or Node"),Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"The title shown in the header")),Object(l.c)("tr",{parentName:"tbody"},Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"isOpen"),Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"Boolean"),Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"Handles opening and closing the dialog")),Object(l.c)("tr",{parentName:"tbody"},Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"onDismiss"),Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"Function"),Object(l.c)("td",Object.assign({parentName:"tr"},{align:"left"}),"Should close the dialog")))))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---content-dialog-md-7736557110b7c279cdc3.js.map