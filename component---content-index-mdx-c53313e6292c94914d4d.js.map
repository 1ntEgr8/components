{"version":3,"sources":["webpack:///./content/index.mdx","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","HeroLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","TableOfContents","items","React","useContext","MDXContext","ul","List","li","ListItem","a","Link","map","item","key","url","href","title","Layout","children","pageContext","h1","H1","frontmatter","description","status","source","additionalContributors","flexDirection","minHeight","flex","display","mb","alignItems","mx","tableOfContents","editUrl","contributors","concat","login"],"mappings":"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","file":"component---content-index-mdx-c53313e6292c94914d4d.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/emily/github/components/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nimport { HeroLayout } from '@primer/gatsby-theme-doctocat';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = HeroLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h2>{`What are Primer Components?`}</h2>\n    <p>{`Primer Components are React components which implement GitHub's Primer Design System ðŸŽ‰`}</p>\n    <h2>{`Installation`}</h2>\n    <p>{`Install `}<inlineCode parentName=\"p\">{`@primer/components`}</inlineCode>{` in your project with npm:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install @primer/components\n`}</code></pre>\n    <h2>{`Usage`}</h2>\n    <p>{`All of our components are exported by name from `}<inlineCode parentName=\"p\">{`@primer/components`}</inlineCode>{`, so you can import them with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import {\n  Box,\n  Button,\n  Heading,\n  Text\n} from '@primer/components'\n`}</code></pre>\n    <p>{`Primer Components come with all the necessary CSS built-in, so you don't need to worry about including `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/primer/primer\"\n      }}>{`Primer CSS`}</a>{`.`}</p>\n    <h4>{`Base styles`}</h4>\n    <p>{`You can establish base Primer styles for your app by wrapping all of your Primer components in `}<inlineCode parentName=\"p\">{`<BaseStyles>`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {BaseStyles, Box, Heading} from '@primer/components'\n\nexport default () => (\n  <BaseStyles>\n    <Box m={4}>\n      <Heading mb={2}>Hello, world!</Heading>\n      <p>This will get Primer text styles.</p>\n    </Box>\n  </BaseStyles>\n)\n`}</code></pre>\n    <p>{`This will set the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`font-family`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`line-height`}</inlineCode>{` CSS properties to the same ones used `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/primer/css/blob/master/src/base/base.scss#L15-L20\"\n      }}>{`to style `}<inlineCode parentName=\"a\">{`<body>`}</inlineCode>{` in Primer CSS`}</a>{`.`}</p>\n    <h4>{`Theming`}</h4>\n    <p>{`Components are styled using Primer's `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/primer/components/blob/master/src/theme.js\"\n      }}>{`theme`}</a>{` by default, but you can provide your own theme by using `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.styled-components.com/docs\"\n      }}>{`styled-component's`}</a>{` `}<inlineCode parentName=\"p\">{`<ThemeProvider>`}</inlineCode>{`. If you'd like to fully replace the Primer `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/primer/components/blob/master/src/theme.js\"\n      }}>{`theme`}</a>{` with your custom theme, pass your theme to the `}<inlineCode parentName=\"p\">{`<ThemeProvider>`}</inlineCode>{` in the root of your application like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ThemeProvider} from 'styled-components'\n\nconst theme = { ... }\n\nconst App = (props) => {\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <div>your app here</div>\n      </ThemeProvider>\n    </div>\n  )\n}\n\n`}</code></pre>\n    <p>{`If you'd like to merge the Primer theme with your theme, you can do so importing the Primer theme and merging using Object.assign:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {ThemeProvider} from 'styled-components'\nimport {theme} from '@primer/components'\n\nconst customTheme = { ... }\n\n\nconst App = (props) => {\n  return (\n    <div>\n      <ThemeProvider theme={Object.assign({}, theme, customTheme)}> // matching keys in customTheme will override keys in the Primer theme\n        <div>your app here</div>\n      </ThemeProvider>\n    </div>\n  )\n}\n`}</code></pre>\n    <p>{`*Note that using `}<inlineCode parentName=\"p\">{`Object.assign`}</inlineCode>{` will only create a shallow merge. This means that if both themes have a `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` object, the `}<em parentName=\"p\">{`entire`}</em>{` `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` object will be replaced with the new `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` object, instead of only replacing duplicate values from the original theme's color object.`}</p>\n    <h4>{`Static CSS rendering`}</h4>\n    <p>{`If you're rendering React components both server-side `}<em parentName=\"p\">{`and`}</em>{` client-side, we suggest following `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.styled-components.com/docs/advanced#server-side-rendering\"\n      }}>{`styled-component's server-side rendering instructions`}</a>{` to avoid the flash of unstyled content for server-rendered components.`}</p>\n    <h2>{`Local Development`}</h2>\n    <p>{`To run `}<inlineCode parentName=\"p\">{`@primer/components`}</inlineCode>{` locally when adding or updating components:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Clone this repo: `}<inlineCode parentName=\"li\">{`git clone https://github.com/primer/components`}</inlineCode></li>\n      <li parentName=\"ol\">{`Install dependencies: `}<inlineCode parentName=\"li\">{`npm install`}</inlineCode></li>\n      <li parentName=\"ol\">{`Run the dev app: `}<inlineCode parentName=\"li\">{`npm start`}</inlineCode></li>\n    </ol>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ðŸ‘‰ See `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/primer/components/blob/master/CONTRIBUTING.md\"\n        }}>{`the contributing docs`}</a>{` for more info on code style, testing, and coverage.`}</p>\n    </blockquote>\n    <h2>{`Principles`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Everything is a component.`}</li>\n      <li parentName=\"ul\">{`Aim for total style encapsulation; don't rely on inheritance to provide default styles.`}</li>\n      <li parentName=\"ul\">{`Build small building blocks with minimal props to keep complexity low.`}</li>\n      <li parentName=\"ul\">{`Keep system constrained by only including props needed per component.`}</li>\n      <li parentName=\"ul\">{`Favor extending or wrapping components for more complex operations.`}</li>\n      <li parentName=\"ul\">{`Maintain design system consistency with utilities as props (for spacing, color, font-size, line-height, widths, and radii).`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import {MDXContext} from '@mdx-js/react'\nimport React from 'react'\n\nfunction TableOfContents({items}) {\n  const {\n    ul: List = 'ul',\n    li: ListItem = 'li',\n    a: Link = 'a',\n  } = React.useContext(MDXContext)\n\n  return (\n    <List>\n      {items.map(item => (\n        <ListItem key={item.url}>\n          <Link href={item.url}>{item.title}</Link>\n          {item.items ? <TableOfContents items={item.items} /> : null}\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nexport default TableOfContents\n","import {MDXContext} from '@mdx-js/react'\nimport {Box, Flex} from '@primer/components'\nimport React from 'react'\nimport Container from './container'\nimport Head from './head'\nimport Header from './header'\nimport PageFooter from './page-footer'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {h1: H1 = 'h1'} = React.useContext(MDXContext)\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\">\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Container>\n          <H1>{title}</H1>\n\n          {status || source ? (\n            <Flex mb={4} alignItems=\"center\">\n              {status ? <StatusLabel status={status} /> : null}\n              <Box mx=\"auto\" />\n              {source ? <SourceLink href={source} /> : null}\n            </Flex>\n          ) : null}\n\n          {pageContext.tableOfContents.items ? (\n            <TableOfContents items={pageContext.tableOfContents.items} />\n          ) : null}\n\n          {children}\n\n          <PageFooter\n            editUrl={pageContext.editUrl}\n            contributors={pageContext.contributors.concat(\n              additionalContributors.map(login => ({login})),\n            )}\n          />\n        </Container>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}